services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/mime.types:/etc/nginx/mime.types:ro
    depends_on:
      - frontend
      - backend
    networks:
      - public_network

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   environment:
  #     RABBITMQ_DEFAULT_USER: user
  #     RABBITMQ_DEFAULT_PASS: password
  #   networks:
  #     - public_network

  frontend:
    build: 
      context: ./site
      args:
        NEXT_PUBLIC_API_URL: /api/
    container_name: site
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL= /api/
    networks:
      - public_network
  
  admin:
    build: ./admin
    container_name: turismo_admin
    ports:
      - "3001:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL= /api/
    networks:
      - public_network

  # email_service:
  #   build: ./turismo_email
  #   container_name: turismo_email_service
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - SPRING_RABBITMQ_HOST=rabbitmq
  #     - SPRING_RABBITMQ_PORT=5672
  #     - SPRING_RABBITMQ_USERNAME=user
  #     - SPRING_RABBITMQ_PASSWORD=password
  #     - SPRING_RABBIT_QUEUE_NAME=turismo.email
  #   depends_on:
  #     - rabbitmq
  #   networks:
  #     - public_network
    
  backend:
    build: ./api
    container_name: turismo_backend
    ports:
      - "8000:8080" 
    # environment:
    #   - SPRING_CACHE_TYPE=redis
    #   - SPRING_REDIS_HOST=redis
    #   - SPRING_REDIS_PORT=6379
    #   - SPRING_RABBITMQ_HOST=rabbitmq
    #   - SPRING_RABBITMQ_PORT=5672
    #   - SPRING_RABBITMQ_USERNAME=user
    #   - SPRING_RABBITMQ_PASSWORD=password
    #   - SPRING_RABBIT_QUEUE_NAME=turismo.email
    # depends_on:
    #   - rabbitmq
    networks:
      - public_network

networks:
  public_network:
    driver: bridge
  private_network:
    driver: bridge

volumes:
  redis-data:
    driver: local
